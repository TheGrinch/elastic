# Licensed to Elasticsearch under one or more contributor
# license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright
# ownership. Elasticsearch licenses this file to you under
# the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

#################################################
#                                               #
#           Preset System Properties            #
#                                               #
#################################################
#
# Any system property can be explicitly overridden without touching this file by adding the system property on the
# command line. For example:
#
#    $ gradle [tasks] -Djava.awt.headless=false
#
# Any environment variable can be overridden by simply having it defined in your environment.
#

# By default, assume that we want local test nodes.
#
# This can be overridden by supplying the corresponding environment variable _or_ -Des.node.local=false
envES_TEST_LOCAL=true

# It's unlikely that you will want to change this value and it is not intended to be overridden.
systemProp.java.awt.headless=true


#################################################
#                                               #
#            Gradle Build Properties            #
#                                               #
#################################################
#
# You can add a "secret.gradle" file at this level and it will be loaded _after_ this file, thus allowing you
# to override all of these properties. Example "secrets.gradle" file:
#
#  // All properties to overwrite
#  def secrets = [
#    // Signing Configuration for jar/pom signing
#    'signing.keyId'             : '24875D73',
#    'signing.password'          : 'secret gpg password',
#    'signing.secretKeyRingFile' : '/Users/local-username/.gnupg/secring.gpg',
#
#    // Sonatype access parameters
#    'sonatypePassword'          : 'sonatype password',
#    'sonatypeUsername'          : 'username'
#  ]
#
#  // Set/overwrite secret properties
#  secrets.each {
#    project.setProperty(it.key, it.value)
#  }
#
# These are properties that are meant to be used during the build. Any of these properties can be overriden on the
# command line. For example:
#
#    $ gradle [tasks] -PsonatypeUsername=my-username
#

# The username and password used for publishing to Maven.
#
#    $ gradle [tasks] -PsonatypeUsername=my-username "-PsonatypePassword=my password"
#
# These are placeholders and you should _never_ set these values here to avoid accidentally committing them to the Git
# repository.
sonatypeUsername=username
sonatypePassword=password

# The signing properties are required to sign the jars and generated POM file.
#
# To setup, you should install GPG (brew install gpg on a Mac). From there, you need to generate a new key. To
# generate a new key, run:
#
#  1. gpg --gen-key (fill out as requested)
#  2. gpg --list-keys
#
#  From step 2, you should find a line like "pub   2048R/24875D73 2014-11-26" where "24875D73" is the keyId. The
#  password will be the value associated with what you typed in while generating the key. The secretKeyRingFile is by
#  default stored in your "~/.gnupg/secring.gpg" (unfortunately using that value does not work as '~' is apparently
#  escaped by Gradle).
#
#    $ gradle [tasks] -Psigning.keyId=24875D73 "-Psigning.password=my secret" -Psigning.secretKeyRingFile=/path/to.gpg
#
# These are placeholders and you should _never_ set the key/password values here to avoid accidentally committing them
# to the Git repository.
signing.keyId=24875D73
signing.password=secret
signing.secretKeyRingFile=/Users/username/.gnupg/secring.gpg